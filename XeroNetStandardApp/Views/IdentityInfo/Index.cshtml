@model XeroNetStandardApp.Models.EndpointControlPanelViewModel
@using System.Text.Json
@{
    ViewBag.Title = "Endpoint Control Panel";
}

<h3>Last Run Summary</h3>
<table class="table table-sm">
    <thead>
        <tr>
            <th>Organisation</th>
            <th>Last Call (UTC)</th>
            <th>Successes</th>
            <th>Failures</th>
            <th>Rows Inserted</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var t in Model.Tenants)
        {
            if (Model.Stats.TryGetValue(t.TenantId!, out var s))
            {
                <tr>
                    <td>@t.OrgName</td>
                    <td>@s.LastCall.ToString("g")</td>
                    <td>@s.EndpointsSuccess</td>
                    <td>@s.EndpointsFail</td>
                    <td>@s.RecordsInserted</td>
                </tr>
            }
        }
    </tbody>
</table>

<h2>Endpoint Control Panel</h2>

<form asp-action="BulkTrigger" method="post">
    <table class="table table-sm table-striped">
        <thead>
            <tr>
                <th>Endpoint</th>
                @* one header cell per tenant *@
                @foreach (var tenant in Model.Tenants)
                {
                    <th class="text-center">
                        @tenant.OrgName
                    </th>
                }
            </tr>
            <tr>
                <th>
                    <button type="submit"
                            name="tenantId"
                            value="ALL"
                            class="btn btn-success">
                        Run&nbsp;All&nbsp;Organisations
                    </button>
                </th>
                @foreach (var tenant in Model.Tenants)
                {
                    <th class="text-center">
                        <button type="submit"
                                name="tenantId"
                                value="@tenant.TenantId"
                                class="btn btn-primary btn-sm">
                            Run&nbsp;Selected
                        </button>
                    </th>
                }
            </tr>
            <tr>
                <th></th>
                @* “select all / none” toggle for each column *@
                @foreach (var tenant in Model.Tenants)
                {
                    <th class="text-center">
                        <input type="checkbox"
                               class="js-column-toggle"
                               data-tenant="@tenant.TenantId" />
                        <small>Select&nbsp;All&nbsp;/&nbsp;None</small>
                    </th>
                }
            </tr>
        </thead>
        <tbody>
            @* grid: row = endpoint, column = tenant *@
            @foreach (var endpoint in Model.Endpoints)
            {
                <tr>
                    <td>@endpoint.DisplayName</td>
                    @foreach (var tenant in Model.Tenants)
                    {
                        <td class="text-center">
                            <input type="checkbox"
                                   name="selected[@tenant.TenantId]"
                                   value="@endpoint.Key"
                                   class="ep-checkbox tenant-@tenant.TenantId" />
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</form>

<div id="runProgress" class="position-fixed top-0 start-0 w-100 h-100 d-none align-items-center justify-content-center" style="background:rgba(128,128,128,0.5);z-index:1050;">
    <div class="text-center">
        <div class="spinner-border" role="status"></div>
        <div id="runProgressMessage" class="mt-2">Processing...</div>
    </div>
</div>

<div class="modal fade" id="runSummaryModal" tabindex="-1" role="dialog" aria-labelledby="runSummaryModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="runSummaryModalLabel">Manual Run Summary</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="runSummaryText"></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // toggle an entire tenant column
        document.querySelectorAll('.js-column-toggle')
                .forEach(function (toggle) {
            toggle.addEventListener('change', function () {
                const tid = this.dataset.tenant;
                document.querySelectorAll('.tenant-' + tid)
                        .forEach(cb => cb.checked = toggle.checked);
            });
        });
        document.querySelector('form')?.addEventListener('submit', function () {
            const overlay = document.getElementById('runProgress');
            const msg = document.getElementById('runProgressMessage');
            if (msg) msg.textContent = 'Manual data load initiated';
            overlay?.classList.remove('d-none');
        });

        window.addEventListener('DOMContentLoaded', function () {
            var finalMsg = @Html.Raw(JsonSerializer.Serialize(TempData["RunStatus"]));
            if (finalMsg) {
                const summary = document.getElementById('runSummaryText');
                if (summary) summary.textContent = finalMsg;
                $('#runSummaryModal').modal('show');
            }
        });
    </script>
    @if (TempData.Keys.Any(k => k.StartsWith("PollLast_")))
    {
        <script>
            @foreach (var key in TempData.Keys.Where(k => k.StartsWith("PollLast_")))
            {
                    var tid = key.Substring("PollLast_".Length);
                    var val = TempData[key];
                    <text>localStorage.setItem('pollLast_@tid', '@val');</text>
            }
        </script>
    }
    @if (TempData.Keys.Any(k => k.StartsWith("PollRows_")))
    {
        <script>
            @foreach (var key in TempData.Keys.Where(k => k.StartsWith("PollRows_")))
            {
                    var tid = key.Substring("PollRows_".Length);
                    var val = TempData[key];
                    <text>localStorage.setItem('pollRows_@tid', '@val');</text>
            }
        </script>
    }
}
