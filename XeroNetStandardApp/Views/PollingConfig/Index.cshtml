@model XeroNetStandardApp.Models.PollingConfigViewModel
@{
    ViewData["Title"] = "Polling Configuration";

    var tenantJson = System.Text.Json.JsonSerializer.Serialize(
        Model.Tenants.Select(t => new { t.TenantId, t.OrgName })
    );
    var scheduleJson = System.Text.Json.JsonSerializer.Serialize(
        Model.Settings.ToDictionary(
            kv => kv.Key,
            kv => new
            {
                kv.Value.PollingSchedule,
                RunTime = kv.Value.RunTime?.ToString(@"hh\:mm"),
                kv.Value.EnabledEndpoints
            })
    );
}

<h2>Polling Configuration</h2>

<!-- view-specific CSS -->
<style>
    /* shared width + centred horizontally */
    .sched-control {
        width: 8rem; /* adjust as needed */
        display: block; /* makes margin centring reliable */
        margin-left: auto;
        margin-right: auto;
    }
</style>

<form asp-action="SaveSchedule" method="post">
    <table class="table table-sm table-striped">
        <thead>
            <tr>
                <th></th>
                @foreach (var tenant in Model.Tenants)
                {
                    <th class="text-center">@tenant.OrgName</th>
                }
            </tr>
            <tr>
                <th></th>
                @foreach (var tenant in Model.Tenants)
                {
                    <th class="text-center">
                        <button type="submit"
                                name="tenantId"
                                value="@tenant.TenantId"
                                class="btn btn-primary btn-sm sched-control">
                            Save&nbsp;Schedule
                        </button>
                    </th>
                }
            </tr>
            <tr>
                <th></th>
                @foreach (var tenant in Model.Tenants)
                {
                    <th class="text-center">
                        <input type="checkbox"
                               class="js-column-toggle"
                               data-tenant="@tenant.TenantId" />
                        <small>Select&nbsp;All&nbsp;/&nbsp;None</small>
                    </th>
                }
            </tr>
            <tr>
                <th>Frequency</th>
                @foreach (var tenant in Model.Tenants)
                {
                    <th class="text-center">
                        <select class="form-select form-select-sm freq-select sched-control"
                                data-tenant="@tenant.TenantId"
                                name="freq[@tenant.TenantId]">
                            <option>Off</option>
                            <option>Daily</option>
                            <option>Weekly</option>
                        </select>
                    </th>
                }
            </tr>
            <tr>
                <th>Time</th>
                @foreach (var tenant in Model.Tenants)
                {
                    <th class="text-center">
                        <input type="time"
                               class="form-control form-control-sm time-input sched-control"
                               data-tenant="@tenant.TenantId"
                               name="time[@tenant.TenantId]" />
                    </th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var ep in Model.Endpoints)
            {
                <tr>
                    <td>@ep.DisplayName</td>
                    @foreach (var tenant in Model.Tenants)
                    {
                        <td class="text-center">
                            <input type="checkbox"
                                   class="ep-checkbox"
                                   data-tenant="@tenant.TenantId"
                                   value="@ep.Key"
                                   name="selected[@tenant.TenantId]" />
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</form>

<script id="tenant-data" type="application/json">
    @Html.Raw(tenantJson)
</script>
<script id="schedule-data" type="application/json">
    @Html.Raw(scheduleJson)
</script>

@section Scripts {
    <script type="text/javascript">
        // ts-nocheck
        (() => {
            const qsa = (s, ctx = document) => Array.from(ctx.querySelectorAll(s));

            /* column toggle */
            qsa('.js-column-toggle').forEach(toggle => {
                toggle.addEventListener('change', () => {
                    const tid = toggle.dataset.tenant;
                    qsa(`.ep-checkbox[data-tenant="${tid}"]`)
                        .forEach(cb => cb.checked = toggle.checked);
                });
            });

            /* hydrate UI */
            const tenants = JSON.parse(
                document.getElementById('tenant-data').textContent
            );
            const schedules = JSON.parse(
                document.getElementById('schedule-data').textContent || '{}'
            );

            tenants.forEach(t => {
                const cfg = schedules[t.TenantId];
                if (!cfg) return;

                (cfg.EnabledEndpoints || []).forEach(k => {
                    const box = document.querySelector(
                        `.ep-checkbox[data-tenant="${t.TenantId}"][value="${k}"]`
                    );
                    if (box) box.checked = true;
                });

                const freqSel = document.querySelector(
                    `.freq-select[data-tenant="${t.TenantId}"]`
                );
                if (freqSel && cfg.PollingSchedule) freqSel.value = cfg.PollingSchedule;

                const timeInp = document.querySelector(
                    `.time-input[data-tenant="${t.TenantId}"]`
                );
                if (timeInp && cfg.RunTime) timeInp.value = cfg.RunTime;
            });

        })();
    </script>
}
