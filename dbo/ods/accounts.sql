-- =============================================================
--  ODS SCD‑2 DDL SCRIPT – Xero Accounts
--  Generated: 28‑May‑2025
--  Notes:
--    * Surrogate key uses IDENTITY (preferred over SERIAL).
--    * Assumes ods.record_status_enum and fn_update_row_updated_at() already exist.
--    * Business key: account_id (UUID from Xero AccountID).
--    * Enumerated fields have CHECK constraints for allowed values.
--    * Arrays / nested objects (Attachments, etc.) are not expanded here.
-- =============================================================

/* -------------------------------------------------------------
   ods.accounts – chart‑of‑account records (Type‑2 SCD)
   ------------------------------------------------------------- */
CREATE TABLE IF NOT EXISTS ods.accounts (
    /* --- Business / natural key -------------------------------- */
    account_id UUID        NOT NULL,                      -- Xero AccountID

    /* --- Core scalar attributes from Account schema ------------ */
    code                     VARCHAR(10),                 -- account code (max 10) fileciteturn19file4
    name                     VARCHAR(150),                -- name (max 150) fileciteturn19file4
    account_type             VARCHAR(20) NOT NULL,        -- AccountType enum fileciteturn19file2
    bank_account_number      VARCHAR(50),                 -- for BANK type accounts fileciteturn19file4
    status                   VARCHAR(10) NOT NULL,        -- ACTIVE | ARCHIVED | DELETED fileciteturn19file0
    description              VARCHAR(4000),               -- description (max 4000) fileciteturn19file4
    bank_account_type        VARCHAR(10),                 -- BANK | CREDITCARD | PAYPAL | NONE fileciteturn19file0
    currency_code            VARCHAR(10),                 -- ISO currency code
    tax_type                 VARCHAR(50),                 -- tax type code
    enable_payments_to_account BOOLEAN,
    show_in_expense_claims     BOOLEAN,
    class                    VARCHAR(10),                 -- ASSET|EQUITY|EXPENSE|LIABILITY|REVENUE fileciteturn19file0
    system_account           VARCHAR(30),                 -- system account enum (read‑only) fileciteturn19file0
    reporting_code           VARCHAR(10),
    reporting_code_name      VARCHAR(50),
    has_attachments          BOOLEAN,
    updated_date_utc         TIMESTAMPTZ,
    add_to_watchlist         BOOLEAN,

    /* --- SCD‑2 infrastructure ---------------------------------- */
    surrogate_key BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    valid_from    TIMESTAMPTZ NOT NULL,
    valid_to      TIMESTAMPTZ NOT NULL DEFAULT '9999-12-31 23:59:59.999999+00',
    is_current    BOOLEAN     NOT NULL DEFAULT TRUE,

    /* --- Tenant / organisation --------------------------------- */
    organisation_id UUID      NOT NULL,

    /* --- Audit & status ---------------------------------------- */
    fetched_at     TIMESTAMPTZ NOT NULL,
    row_created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    row_updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    record_status  ods.record_status_enum NOT NULL DEFAULT 'ACTIVE',

    /* --- Batch / source tracking ------------------------------- */
    batch_id                  UUID         NOT NULL,
    landing_table_name        VARCHAR(255) NOT NULL,
    landing_record_identifier VARCHAR(512) NOT NULL,
    raw_table_name            VARCHAR(255),
    api_call_id               UUID,
    source_system_id          VARCHAR(100),
    source_record_modified_at TIMESTAMPTZ,

    /* --- Constraints ------------------------------------------- */
    CONSTRAINT uq_accounts_business_key_current
        UNIQUE (account_id, is_current) WHERE is_current,

    CONSTRAINT fk_accounts_organisation
        FOREIGN KEY (organisation_id)
        REFERENCES ods.organisations(organisation_id),

    /* enumerations ---------------------------------------------- */
    CONSTRAINT ck_accounts_status
        CHECK (status IN ('ACTIVE','ARCHIVED','DELETED')),

    CONSTRAINT ck_accounts_type
        CHECK (account_type IN (
            'BANK','CURRENT','CURRLIAB','DEPRECIATN','DIRECTCOSTS','EQUITY','EXPENSE','FIXED','INVENTORY','LIABILITY','NONCURRENT','OTHERINCOME','OVERHEADS','PREPAYMENT','REVENUE','SALES','TERMLIAB','PAYG'
        )),

    CONSTRAINT ck_accounts_class
        CHECK (class IN ('ASSET','EQUITY','EXPENSE','LIABILITY','REVENUE')),

    CONSTRAINT ck_accounts_bank_account_type
        CHECK (bank_account_type IN ('BANK','CREDITCARD','PAYPAL','NONE') OR bank_account_type IS NULL),

    /* generic checks -------------------------------------------- */
    CONSTRAINT ck_accounts_record_status
        CHECK (record_status IN ('ACTIVE','SUPERSEDED','ARCHIVED','REMOVED')),

    CONSTRAINT ck_accounts_valid_dates
        CHECK (valid_from < valid_to)
);

/* --- Indexes -------------------------------------------------- */
CREATE INDEX IF NOT EXISTS idx_accounts_business_key_current
    ON ods.accounts(account_id) WHERE is_current;

CREATE INDEX IF NOT EXISTS idx_accounts_valid_to
    ON ods.accounts(valid_to);

CREATE INDEX IF NOT EXISTS idx_accounts_is_current
    ON ods.accounts(is_current);

CREATE INDEX IF NOT EXISTS idx_accounts_fetched_at
    ON ods.accounts(fetched_at);

CREATE INDEX IF NOT EXISTS idx_accounts_batch_id
    ON ods.accounts(batch_id);

CREATE INDEX IF NOT EXISTS idx_accounts_organisation_id
    ON ods.accounts(organisation_id);

/* --- Trigger to maintain row_updated_at ----------------------- */
CREATE TRIGGER trg_update_accounts_row_updated_at
BEFORE UPDATE ON ods.accounts
FOR EACH ROW EXECUTE FUNCTION fn_update_row_updated_at();

/* --- Documentation ------------------------------------------- */
COMMENT ON TABLE ods.accounts IS 'Chart‑of‑accounts records from Xero, stored as a Type‑2 Slowly Changing Dimension to capture historical changes.';
COMMENT ON COLUMN ods.accounts.account_id IS 'Natural business key – Xero AccountID.';
COMMENT ON COLUMN ods.accounts.account_type IS 'Xero AccountType – e.g. BANK, EXPENSE, REVENUE.';
COMMENT ON COLUMN ods.accounts.bank_account_type IS 'Bank account subtype when account_type = BANK (BANK, CREDITCARD, PAYPAL, NONE).';
COMMENT ON COLUMN ods.accounts.status IS 'Account status (ACTIVE, ARCHIVED, DELETED).';
COMMENT ON COLUMN ods.accounts.class IS 'Account class (ASSET, EQUITY, EXPENSE, LIABILITY, REVENUE).';
COMMENT ON COLUMN ods.accounts.surrogate_key IS 'Surrogate key for each version of the account record.';
COMMENT ON COLUMN ods.accounts.valid_from IS 'Timestamp at which this version becomes valid.';
COMMENT ON COLUMN ods.accounts.valid_to IS 'Timestamp at which this version ceases to be valid.';
COMMENT ON COLUMN ods.accounts.is_current IS 'TRUE if this row is the current version.';
