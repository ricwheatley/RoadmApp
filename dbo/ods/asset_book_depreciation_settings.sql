-- =============================================================
--  ODS SCD‑2 DDL SCRIPT – Xero AssetBookDepreciationSettings
--  Generated: 28‑May‑2025
--  Notes:
--    * One row per depreciation book (ACCOUNTING or TAX) for every asset.
--    * Composite business key: asset_id + book_type.
--    * Surrogate key uses BIGINT IDENTITY.
--    * Assumes ods.record_status_enum and fn_update_row_updated_at() already exist.
--    * Column list follows the Xero BookDepreciationSetting schema – scalar only.
-- =============================================================

/* -------------------------------------------------------------
   ods.asset_book_depreciation_settings – Type‑2 SCD for
   Fixed‑asset depreciation settings per accounting/tax book
   ------------------------------------------------------------- */
CREATE TABLE IF NOT EXISTS ods.asset_book_depreciation_settings (
    /* --- Composite natural key -------------------------------- */
    asset_id                    UUID            NOT NULL,   -- Parent asset (business key)
    book_type                   VARCHAR(15)     NOT NULL,   -- ACCOUNTING | TAX

    /* --- Depreciation settings (scalar) ----------------------- */
    depreciation_method         VARCHAR(30),                -- STRAIGHT_LINE | DIMINISHING_VALUE | NONE
    depreciation_rate           NUMERIC(7,4) CHECK (depreciation_rate >= 0),
    depreciation_calculation_method VARCHAR(10),            -- RATE | LIFE
    depreciation_start_date     DATE,
    averaging_method            VARCHAR(15),                -- FULL_MONTH | DAILY | NONE
    depreciation_life_years     NUMERIC(5,2) CHECK (depreciation_life_years >= 0),

    /* --- Parent / tenancy link -------------------------------- */
    organisation_id             UUID            NOT NULL,

    /* --- SCD‑2 infrastructure -------------------------------- */
    surrogate_key               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    valid_from                  TIMESTAMPTZ NOT NULL,
    valid_to                    TIMESTAMPTZ NOT NULL DEFAULT '9999-12-31 23:59:59.999999+00',
    is_current                  BOOLEAN NOT NULL DEFAULT TRUE,

    /* --- Audit & status -------------------------------------- */
    fetched_at                  TIMESTAMPTZ NOT NULL,
    row_created_at              TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    row_updated_at              TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    record_status               ods.record_status_enum NOT NULL DEFAULT 'ACTIVE',

    /* --- Batch / source tracking ----------------------------- */
    batch_id                    UUID            NOT NULL,
    landing_table_name          VARCHAR(255)    NOT NULL,
    landing_record_identifier   VARCHAR(512)    NOT NULL,
    raw_table_name              VARCHAR(255),
    api_call_id                 UUID,
    source_system_id            VARCHAR(100),
    source_record_modified_at   TIMESTAMPTZ,

    /* --- Constraints ----------------------------------------- */
    CONSTRAINT uq_asset_book_depr_settings_business_key_current
        UNIQUE (asset_id, book_type, is_current) WHERE is_current,

    CONSTRAINT ck_asset_book_depr_settings_book_type
        CHECK (book_type IN ('ACCOUNTING','TAX')),

    CONSTRAINT ck_asset_book_depr_settings_dep_method
        CHECK (depreciation_method IS NULL OR depreciation_method IN ('STRAIGHT_LINE','DIMINISHING_VALUE','NONE')),

    CONSTRAINT ck_asset_book_depr_settings_calc_method
        CHECK (depreciation_calculation_method IS NULL OR depreciation_calculation_method IN ('RATE','LIFE')),

    CONSTRAINT ck_asset_book_depr_settings_avg_method
        CHECK (averaging_method IS NULL OR averaging_method IN ('FULL_MONTH','DAILY','NONE')),

    CONSTRAINT ck_asset_book_depr_settings_valid_dates
        CHECK (valid_from < valid_to),

    CONSTRAINT ck_asset_book_depr_settings_record_status
        CHECK (record_status IN ('ACTIVE','SUPERSEDED','ARCHIVED','REMOVED'))
);

/* --- Foreign Keys ------------------------------------------- */
ALTER TABLE ods.asset_book_depreciation_settings
    ADD CONSTRAINT fk_asset_book_depr_settings_asset
    FOREIGN KEY (asset_id)
    REFERENCES ods.assets(asset_id);

ALTER TABLE ods.asset_book_depreciation_settings
    ADD CONSTRAINT fk_asset_book_depr_settings_organisation
    FOREIGN KEY (organisation_id)
    REFERENCES ods.organisations(organisation_id);

/* --- Indexes ------------------------------------------------- */
CREATE INDEX IF NOT EXISTS idx_asset_book_depr_settings_business_key_current
        ON ods.asset_book_depreciation_settings(asset_id, book_type) WHERE is_current;
CREATE INDEX IF NOT EXISTS idx_asset_book_depr_settings_valid_to
        ON ods.asset_book_depreciation_settings(valid_to);
CREATE INDEX IF NOT EXISTS idx_asset_book_depr_settings_is_current
        ON ods.asset_book_depreciation_settings(is_current);
CREATE INDEX IF NOT EXISTS idx_asset_book_depr_settings_fetched_at
        ON ods.asset_book_depreciation_settings(fetched_at);
CREATE INDEX IF NOT EXISTS idx_asset_book_depr_settings_batch_id
        ON ods.asset_book_depreciation_settings(batch_id);
CREATE INDEX IF NOT EXISTS idx_asset_book_depr_settings_organisation_id
        ON ods.asset_book_depreciation_settings(organisation_id);

/* --- Trigger to maintain row_updated_at ---------------------- */
CREATE TRIGGER trg_update_asset_book_depr_settings_row_updated_at
BEFORE UPDATE ON ods.asset_book_depreciation_settings
FOR EACH ROW EXECUTE FUNCTION fn_update_row_updated_at();

/* --- Documentation ------------------------------------------ */
COMMENT ON TABLE ods.asset_book_depreciation_settings IS 'Stores depreciation settings (ACCOUNTING & TAX books) for each fixed asset as a Type‑2 slowly‑changing dimension.';
COMMENT ON COLUMN ods.asset_book_depreciation_settings.asset_id IS 'Parent asset identifier (business key).';
COMMENT ON COLUMN ods.asset_book_depreciation_settings.book_type IS 'Book to which the settings apply: ACCOUNTING or TAX.';
