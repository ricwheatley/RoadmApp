-- =============================================================
--  ODS SCD‑2 DDL SCRIPT – Xero Assets
--  Generated: 28‑May‑2025
--  Notes:
--    * Surrogate key uses BIGINT IDENTITY (PostgreSQL‑preferred over SERIAL).
--    * Assumes ods.record_status_enum and fn_update_row_updated_at() already exist (no duplication here).
--    * Business key: asset_id (UUID).
--    * asset_number is included as an additional natural key candidate (unique in source).
--    * Nested objects (trackingItems, depreciation settings/details, tax values, etc.) are NOT expanded – ask if separate tables are needed.
-- =============================================================

/* -------------------------------------------------------------
   ods.assets – Type‑2 SCD for fixed assets (Xero Assets API)
   ------------------------------------------------------------- */
CREATE TABLE IF NOT EXISTS ods.assets (
    /* --- Business / natural key(s) --------------------------- */
    asset_id                    UUID            NOT NULL,  -- Xero AssetID

    /* asset_number is unique in Xero but may change – keep nullable */
    asset_number                VARCHAR(50),

    /* --- Parent / tenancy link ------------------------------- */
    organisation_id             UUID            NOT NULL,

    /* --- Core scalar attributes ------------------------------ */
    asset_name                  VARCHAR(255)    NOT NULL,
    asset_type_id               UUID,
    purchase_date               DATE,
    purchase_price              NUMERIC(18,4)   CHECK (purchase_price >= 0),
    disposal_date               DATE,
    disposal_price              NUMERIC(18,4)   CHECK (disposal_price >= 0),
    warranty_expiry_date        DATE,
    serial_number               VARCHAR(255),
    asset_status                VARCHAR(10)     CHECK (asset_status IN ('Draft','Registered','Disposed')),
    can_rollback                BOOLEAN,
    accounting_book_value       NUMERIC(18,4)   CHECK (accounting_book_value >= 0),
    is_delete_enabled_for_date  BOOLEAN,

    /* --- SCD‑2 infrastructure -------------------------------- */
    surrogate_key               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    valid_from                  TIMESTAMPTZ NOT NULL,
    valid_to                    TIMESTAMPTZ NOT NULL DEFAULT '9999-12-31 23:59:59.999999+00',
    is_current                  BOOLEAN NOT NULL DEFAULT TRUE,

    /* --- Audit & status -------------------------------------- */
    fetched_at                  TIMESTAMPTZ NOT NULL,
    row_created_at              TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    row_updated_at              TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    record_status               ods.record_status_enum NOT NULL DEFAULT 'ACTIVE',

    /* --- Batch / source tracking ----------------------------- */
    batch_id                    UUID            NOT NULL,
    landing_table_name          VARCHAR(255)    NOT NULL,
    landing_record_identifier   VARCHAR(512)    NOT NULL,
    raw_table_name              VARCHAR(255),
    api_call_id                 UUID,
    source_system_id            VARCHAR(100),
    source_record_modified_at   TIMESTAMPTZ,

    /* --- Constraints ----------------------------------------- */


    CONSTRAINT ck_assets_record_status
        CHECK (record_status IN ('ACTIVE','SUPERSEDED','ARCHIVED','REMOVED')),
    CONSTRAINT ck_assets_valid_dates
        CHECK (valid_from < valid_to)
);



/* --- Indexes ------------------------------------------------- */
CREATE INDEX IF NOT EXISTS idx_assets_business_key_current
        ON ods.assets(asset_id) WHERE is_current;
CREATE INDEX IF NOT EXISTS idx_assets_asset_number
        ON ods.assets(asset_number);
CREATE INDEX IF NOT EXISTS idx_assets_valid_to
        ON ods.assets(valid_to);
CREATE INDEX IF NOT EXISTS idx_assets_is_current
        ON ods.assets(is_current);
CREATE INDEX IF NOT EXISTS idx_assets_fetched_at
        ON ods.assets(fetched_at);
CREATE INDEX IF NOT EXISTS idx_assets_batch_id
        ON ods.assets(batch_id);
CREATE INDEX IF NOT EXISTS idx_assets_organisation_id
        ON ods.assets(organisation_id);

/* --- Trigger to maintain row_updated_at ---------------------- */
CREATE TRIGGER trg_update_assets_row_updated_at
BEFORE UPDATE ON ods.assets
FOR EACH ROW EXECUTE FUNCTION ods.fn_update_row_updated_at();

/* --- Documentation ------------------------------------------ */
COMMENT ON TABLE ods.assets IS 'Stores fixed‑asset master records from the Xero Assets API as Type‑2 slowly changing dimensions.';
COMMENT ON COLUMN ods.assets.asset_id IS 'Natural business key (Xero‑generated AssetID).';
COMMENT ON COLUMN ods.assets.asset_number IS 'User‑defined asset number – unique within Xero organisation.';
COMMENT ON COLUMN ods.assets.asset_status IS 'Lifecycle status of the asset (Draft / Registered / Disposed).';
COMMENT ON COLUMN ods.assets.accounting_book_value IS 'Current accounting book value of the asset as returned by Xero.';
