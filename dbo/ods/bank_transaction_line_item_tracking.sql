-- =============================================================
--  ODS SCD‑2 DDL SCRIPT – Xero BankTransactionLineItemTracking
--  Generated: 28‑May‑2025
--  Notes:
--    * Surrogate key uses BIGINT IDENTITY (PostgreSQL‑preferred).
--    * Assumes ods.record_status_enum and fn_update_row_updated_at() already exist.
--    * Composite business key: line_item_id + tracking_option_id (one tracking option per line item).
-- =============================================================

/* -------------------------------------------------------------
   ods.bank_transaction_line_item_tracking – Tracking categories for bank transaction line items as SCD‑2
   ------------------------------------------------------------- */
CREATE TABLE IF NOT EXISTS ods.bank_transaction_line_item_tracking (
    /* --- Business / natural key ------------------------------ */
    line_item_id          UUID            NOT NULL,  -- Parent LineItemID
    tracking_option_id    UUID            NOT NULL,  -- TrackingOptionID

    /* --- Relationship keys ----------------------------------- */
    organisation_id       UUID            NOT NULL,

    /* --- Core scalar attributes ------------------------------ */
    tracking_category_id   UUID,
    tracking_category_name VARCHAR(100),
    tracking_option_name   VARCHAR(100),

    /* --- SCD‑2 infrastructure -------------------------------- */
    surrogate_key         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    valid_from            TIMESTAMPTZ     NOT NULL,
    valid_to              TIMESTAMPTZ     NOT NULL DEFAULT '9999-12-31 23:59:59.999999+00',
    is_current            BOOLEAN         NOT NULL DEFAULT TRUE,

    /* --- Audit & status -------------------------------------- */
    fetched_at                   TIMESTAMPTZ NOT NULL,
    row_created_at               TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    row_updated_at               TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    record_status                ods.record_status_enum NOT NULL DEFAULT 'ACTIVE',

    /* --- Batch / source tracking ----------------------------- */
    batch_id                     UUID         NOT NULL,
    landing_table_name           VARCHAR(255) NOT NULL,
    landing_record_identifier    VARCHAR(512) NOT NULL,
    raw_table_name               VARCHAR(255),
    api_call_id                  UUID,
    source_system_id             VARCHAR(100),
    source_record_modified_at    TIMESTAMPTZ,

    /* --- Constraints ----------------------------------------- */
    CONSTRAINT uq_btli_tracking_business_key_current
        UNIQUE (line_item_id, tracking_option_id, is_current) WHERE is_current,

    CONSTRAINT fk_btli_tracking_line_item
        FOREIGN KEY (line_item_id)
        REFERENCES ods.bank_transaction_line_items(line_item_id),

    CONSTRAINT fk_btli_tracking_option
        FOREIGN KEY (tracking_option_id)
        REFERENCES ods.tracking_options(tracking_option_id),

    CONSTRAINT fk_btli_organisation
        FOREIGN KEY (organisation_id)
        REFERENCES ods.organisations(organisation_id),

    CONSTRAINT ck_btli_record_status
        CHECK (record_status IN ('ACTIVE','SUPERSEDED','ARCHIVED','REMOVED')),

    CONSTRAINT ck_btli_valid_dates
        CHECK (valid_from < valid_to)
);

/* --- Indexes -------------------------------------------------- */
CREATE INDEX IF NOT EXISTS idx_btli_tracking_line_item_current
    ON ods.bank_transaction_line_item_tracking(line_item_id, tracking_option_id) WHERE is_current;

CREATE INDEX IF NOT EXISTS idx_btli_tracking_valid_to
    ON ods.bank_transaction_line_item_tracking(valid_to);

CREATE INDEX IF NOT EXISTS idx_btli_tracking_is_current
    ON ods.bank_transaction_line_item_tracking(is_current);

CREATE INDEX IF NOT EXISTS idx_btli_tracking_fetched_at
    ON ods.bank_transaction_line_item_tracking(fetched_at);

CREATE INDEX IF NOT EXISTS idx_btli_tracking_batch_id
    ON ods.bank_transaction_line_item_tracking(batch_id);

CREATE INDEX IF NOT EXISTS idx_btli_tracking_organisation_id
    ON ods.bank_transaction_line_item_tracking(organisation_id);

/* --- Trigger to maintain row_updated_at ----------------------- */
CREATE TRIGGER trg_update_btli_tracking_row_updated_at
BEFORE UPDATE ON ods.bank_transaction_line_item_tracking
FOR EACH ROW EXECUTE FUNCTION ods.fn_update_row_updated_at();

/* --- Documentation ------------------------------------------- */
COMMENT ON TABLE ods.bank_transaction_line_item_tracking IS 'Tracking categories applied to bank transaction line items, captured as Type‑2 SCD records.';
COMMENT ON COLUMN ods.bank_transaction_line_item_tracking.line_item_id IS 'Parent LineItemID within a bank transaction.';
COMMENT ON COLUMN ods.bank_transaction_line_item_tracking.tracking_option_id IS 'Tracking Option ID assigned to this line item.';
COMMENT ON COLUMN ods.bank_transaction_line_item_tracking.is_current IS 'TRUE if this row represents the current version of the tracking link.';