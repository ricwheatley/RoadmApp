-- =============================================================
--  ODS SCD‑2 table for Xero Contacts  (updated record_status enum)
-- =============================================================

/* ----------------------------------------------------------------
   1.  ENUM TYPE (creates if it does not already exist)           */
CREATE TYPE IF NOT EXISTS ods.record_status_enum AS ENUM (
    'ACTIVE',
    'SUPERSEDED',
    'ARCHIVED',
    'REMOVED'
);

/* ----------------------------------------------------------------
   2.  MAIN TABLE                                                  */
CREATE TABLE IF NOT EXISTS ods.contacts (
    /* -------- Business / natural key(s) ----------------------- */
    contact_id                     UUID            NOT NULL,  -- Xero ContactID

    /* -------- Core scalar attributes from source ------------- */
    merged_to_contact_id           UUID,
    contact_number                 VARCHAR(50),
    account_number                 VARCHAR(50),
    contact_status                 VARCHAR(20),
    name                           VARCHAR(255),
    first_name                     VARCHAR(255),
    last_name                      VARCHAR(255),
    company_number                 VARCHAR(50),
    email_address                  VARCHAR(255),
    bank_account_details           VARCHAR(255),
    tax_number                     VARCHAR(50),
    accounts_receivable_tax_type   VARCHAR(50),
    accounts_payable_tax_type      VARCHAR(50),
    is_supplier                    BOOLEAN,
    is_customer                    BOOLEAN,
    sales_default_line_amount_type VARCHAR(10),
    purchases_default_line_amount_type VARCHAR(10),
    default_currency               VARCHAR(10),
    xero_network_key               VARCHAR(255),
    sales_default_account_code     VARCHAR(50),
    purchases_default_account_code VARCHAR(50),
    discount                       NUMERIC(18,2),
    website                        VARCHAR(255),
    has_attachments                BOOLEAN,
    has_validation_errors          BOOLEAN,
    status_attribute_string        VARCHAR(50),
    updated_date_utc               TIMESTAMPTZ,

    /* -------- SCD‑2 infrastructure --------------------------- */
    surrogate_key      GENERATED BY DEFAULT AS IDENTITY,
    valid_from         TIMESTAMPTZ NOT NULL,
    valid_to           TIMESTAMPTZ NOT NULL
                        DEFAULT '9999-12-31 23:59:59.999999+00',
    is_current         BOOLEAN     NOT NULL DEFAULT TRUE,

    /* -------- Tenant / organisation -------------------------- */
    organisation_id    UUID        NOT NULL,

    /* -------- Audit & status --------------------------------- */
    fetched_at                     TIMESTAMPTZ NOT NULL,
    row_created_at                 TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    row_updated_at                 TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    record_status                  ods.record_status_enum NOT NULL DEFAULT 'ACTIVE',

    /* -------- Batch / source tracking ------------------------ */
    batch_id                       UUID        NOT NULL,
    landing_table_name             VARCHAR(255) NOT NULL,
    landing_record_identifier      VARCHAR(512) NOT NULL,
    raw_table_name                 VARCHAR(255),
    api_call_id                    UUID,
    source_system_id               VARCHAR(100),
    source_record_modified_at      TIMESTAMPTZ,

    /* -------- Constraints ------------------------------------ */
    CONSTRAINT uq_contacts_business_key_current
        UNIQUE (contact_id, is_current) WHERE is_current,

    CONSTRAINT ck_contacts_record_status
        CHECK (record_status IN ('ACTIVE','SUPERSEDED','ARCHIVED','REMOVED')),

    CONSTRAINT ck_contacts_valid_dates
        CHECK (valid_from < valid_to),

    CONSTRAINT fk_contacts_organisation
        FOREIGN KEY (organisation_id)
        REFERENCES ods.organisations(organisation_id)
);

/* ----------------------------------------------------------------
   3.  Indexes                                                    */
CREATE INDEX IF NOT EXISTS idx_contacts_business_key_current
        ON ods.contacts(contact_id) WHERE is_current;

CREATE INDEX IF NOT EXISTS idx_contacts_valid_to
        ON ods.contacts(valid_to);

CREATE INDEX IF NOT EXISTS idx_contacts_is_current
        ON ods.contacts(is_current);

CREATE INDEX IF NOT EXISTS idx_contacts_fetched_at
        ON ods.contacts(fetched_at);

CREATE INDEX IF NOT EXISTS idx_contacts_batch_id
        ON ods.contacts(batch_id);

CREATE INDEX IF NOT EXISTS idx_contacts_organisation_id
        ON ods.contacts(organisation_id);

/* ----------------------------------------------------------------
   4.  Audit trigger                                              */
CREATE OR REPLACE FUNCTION ods.fn_update_row_updated_at()
RETURNS TRIGGER AS $$
BEGIN
    NEW.row_updated_at := CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE TRIGGER trg_update_contacts_row_updated_at
BEFORE UPDATE ON ods.contacts
FOR EACH ROW EXECUTE FUNCTION ods.fn_update_row_updated_at();

/* ----------------------------------------------------------------
   5.  Comments                                                   */
COMMENT ON TABLE ods.contacts
    IS 'Stores Type 2 Slowly Changing Dimensions for contact data, capturing historical changes.';
COMMENT ON COLUMN ods.contacts.contact_id
    IS 'Natural business key (Xero ContactID) for a contact.';
COMMENT ON COLUMN ods.contacts.surrogate_key
    IS 'Unique surrogate identifier for each version of a contact record.';
COMMENT ON COLUMN ods.contacts.valid_from
    IS 'Timestamp from which this version of the contact record is valid.';
COMMENT ON COLUMN ods.contacts.valid_to
    IS 'Timestamp until which this version of the contact record was valid – far‑future date indicates current.';
COMMENT ON COLUMN ods.contacts.is_current
    IS 'TRUE if this row is the current version of the contact.';
COMMENT ON COLUMN ods.contacts.fetched_at
    IS 'When the contact data was fetched from Xero.';
COMMENT ON COLUMN ods.contacts.row_created_at
    IS 'When this row was inserted into the ODS.';
COMMENT ON COLUMN ods.contacts.row_updated_at
    IS 'When this row was last updated in the ODS.';
