-- =============================================================
--  ODS SCD‑2 DDL SCRIPT – Xero CreditNotes
--  Generated: 28‑May‑2025
--  Notes:
--    * Surrogate key uses IDENTITY (preferred over SERIAL).
--    * Assumes ods.record_status_enum and fn_update_row_updated_at() already exist.
--    * Business key: credit_note_id (UUID).
--    * Nested objects/arrays (LineItems, Payments, Allocations, Attachments, etc.) are NOT expanded here – request
--      separate SCD‑2 child tables if needed.
-- =============================================================

/* -------------------------------------------------------------
   ods.credit_notes – customer & supplier credit notes
   ------------------------------------------------------------- */
CREATE TABLE IF NOT EXISTS ods.credit_notes (
    /* --- Business / natural key ----------------------------- */
    credit_note_id      UUID            NOT NULL, -- Xero CreditNoteID

    /* --- Relationship keys ---------------------------------- */
    contact_id          UUID            NOT NULL, -- Contact related to the credit note

    /* --- Core scalar attributes ----------------------------- */
    credit_note_number  VARCHAR(50),
    type                VARCHAR(15)     NOT NULL,
    status              VARCHAR(15)     NOT NULL,
    date                DATE,
    due_date            DATE,
    reference           VARCHAR(255),
    line_amount_types   VARCHAR(10),
    currency_code       VARCHAR(3),
    currency_rate       NUMERIC(18,6),
    remaining_credit    NUMERIC(18,2),
    applied_amount      NUMERIC(18,2),
    sub_total           NUMERIC(18,2),
    total_tax           NUMERIC(18,2),
    total               NUMERIC(18,2),
    branding_theme_id   UUID,
    sent_to_contact     BOOLEAN,
    has_attachments     BOOLEAN,
    has_errors          BOOLEAN,
    status_attribute_string VARCHAR(50),
    updated_date_utc    TIMESTAMPTZ,
    fully_paid_on_date  DATE,

    /* --- Tenant / organisation ------------------------------ */
    organisation_id     UUID            NOT NULL,

    /* --- SCD‑2 infrastructure ------------------------------- */
    surrogate_key       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    valid_from          TIMESTAMPTZ     NOT NULL,
    valid_to            TIMESTAMPTZ     NOT NULL DEFAULT '9999-12-31 23:59:59.999999+00',
    is_current          BOOLEAN         NOT NULL DEFAULT TRUE,

    /* --- Audit & status ------------------------------------- */
    fetched_at          TIMESTAMPTZ     NOT NULL,
    row_created_at      TIMESTAMPTZ     NOT NULL DEFAULT CURRENT_TIMESTAMP,
    row_updated_at      TIMESTAMPTZ     NOT NULL DEFAULT CURRENT_TIMESTAMP,
    record_status       ods.record_status_enum NOT NULL DEFAULT 'ACTIVE',

    /* --- Batch / source tracking ---------------------------- */
    batch_id                  UUID         NOT NULL,
    landing_table_name        VARCHAR(255) NOT NULL,
    landing_record_identifier VARCHAR(512) NOT NULL,
    raw_table_name            VARCHAR(255),
    api_call_id               UUID,
    source_system_id          VARCHAR(100),
    source_record_modified_at TIMESTAMPTZ,

    /* --- Constraints ---------------------------------------- */
    CONSTRAINT uq_credit_notes_business_key_current
        UNIQUE (credit_note_id, is_current) WHERE is_current,

    CONSTRAINT fk_credit_notes_contact
        FOREIGN KEY (contact_id)
        REFERENCES ods.contacts(contact_id),

    CONSTRAINT fk_credit_notes_organisation
        FOREIGN KEY (organisation_id)
        REFERENCES ods.organisations(organisation_id),

    CONSTRAINT fk_credit_notes_branding_theme
        FOREIGN KEY (branding_theme_id)
        REFERENCES ods.branding_themes(branding_theme_id),

    /* Enumerated & format checks */
    CONSTRAINT ck_credit_notes_type
        CHECK (type IN ('ACCPAYCREDIT','ACCRECCREDIT')),

    CONSTRAINT ck_credit_notes_status
        CHECK (status IN ('DRAFT','SUBMITTED','DELETED','AUTHORISED','PAID','VOIDED')),

    CONSTRAINT ck_credit_notes_line_amount_types
        CHECK (line_amount_types IS NULL OR line_amount_types IN ('EXCLUSIVE','INCLUSIVE','NOTAX')),

    CONSTRAINT ck_credit_notes_currency_code
        CHECK (currency_code IS NULL OR currency_code ~ '^[A-Z]{3}$'),

    CONSTRAINT ck_credit_notes_amounts_non_negative
        CHECK (
            sub_total       IS NULL OR sub_total       >= 0 AND
            total_tax       IS NULL OR total_tax       >= 0 AND
            total           IS NULL OR total           >= 0 AND
            remaining_credit IS NULL OR remaining_credit >= 0 AND
            applied_amount  IS NULL OR applied_amount  >= 0
        ),

    CONSTRAINT ck_credit_notes_record_status
        CHECK (record_status IN ('ACTIVE','SUPERSEDED','ARCHIVED','REMOVED')),

    CONSTRAINT ck_credit_notes_valid_dates
        CHECK (valid_from < valid_to)
);

/* --- Indexes ------------------------------------------------ */
CREATE INDEX IF NOT EXISTS idx_credit_notes_business_key_current
    ON ods.credit_notes(credit_note_id) WHERE is_current;

CREATE INDEX IF NOT EXISTS idx_credit_notes_contact
    ON ods.credit_notes(contact_id);

CREATE INDEX IF NOT EXISTS idx_credit_notes_valid_to
    ON ods.credit_notes(valid_to);

CREATE INDEX IF NOT EXISTS idx_credit_notes_is_current
    ON ods.credit_notes(is_current);

CREATE INDEX IF NOT EXISTS idx_credit_notes_fetched_at
    ON ods.credit_notes(fetched_at);

CREATE INDEX IF NOT EXISTS idx_credit_notes_batch_id
    ON ods.credit_notes(batch_id);

CREATE INDEX IF NOT EXISTS idx_credit_notes_organisation_id
    ON ods.credit_notes(organisation_id);

/* --- Trigger to maintain row_updated_at -------------------- */
CREATE TRIGGER trg_update_credit_notes_row_updated_at
BEFORE UPDATE ON ods.credit_notes
FOR EACH ROW EXECUTE FUNCTION fn_update_row_updated_at();

/* --- Documentation ----------------------------------------- */
COMMENT ON TABLE ods.credit_notes IS 'Customer and supplier credit notes stored as Type‑2 slowly‑changing dimensions (one row per CreditNoteID version).';
COMMENT ON COLUMN ods.credit_notes.credit_note_id IS 'Xero CreditNoteID (business key).';
COMMENT ON COLUMN ods.credit_notes.type IS 'Credit note type – ACCPAYCREDIT (supplier credit) or ACCRECCREDIT (customer credit).';
COMMENT ON COLUMN ods.credit_notes.status IS 'Workflow status of the credit note.';
COMMENT ON COLUMN ods.credit_notes.line_amount_types IS 'How line item amounts are interpreted: EXCLUSIVE, INCLUSIVE, or NOTAX.';
COMMENT ON COLUMN ods.credit_notes.currency_code IS 'ISO‑4217 currency code.';
COMMENT ON COLUMN ods.credit_notes.surrogate_key IS 'Surrogate identifier for each version of the credit note record.';
COMMENT ON COLUMN ods.credit_notes.valid_from IS 'Timestamp when this credit note record version becomes valid.';
COMMENT ON COLUMN ods.credit_notes.valid_to IS 'Timestamp when this credit note record version ceases to be valid.';
COMMENT ON COLUMN ods.credit_notes.is_current IS 'TRUE if this row represents the current version.';
