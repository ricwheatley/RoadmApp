-- =============================================================
--  ODS SCD‑2 DDL SCRIPT – Xero Employees
--  Generated: 28‑May‑2025
--  Notes:
--    * Surrogate key uses BIGINT IDENTITY (PostgreSQL‑preferred).
--    * Assumes ods.record_status_enum and fn_update_row_updated_at() already exist.
--    * Business key: employee_id (UUID).
--    * Adapted from the Xero Employees endpoint (Payroll/Accounting) – includes only scalar fields.
-- =============================================================

/* -------------------------------------------------------------
   ods.employees – Type‑2 Slowly Changing Dimensions table
   ------------------------------------------------------------- */
CREATE TABLE IF NOT EXISTS ods.employees (
    /* --- Business / natural key ----------------------------- */
    employee_id          UUID            NOT NULL,  -- Xero EmployeeID (natural key)

    /* --- Tenant / organisation ------------------------------ */
    organisation_id      UUID            NOT NULL,

    /* --- Core scalar attributes ----------------------------- */
    first_name           VARCHAR(255),
    last_name            VARCHAR(255),
    email_address        VARCHAR(255),
    date_of_birth        DATE,
    gender               VARCHAR(10) CHECK (gender IN ('MALE','FEMALE','OTHER','UNKNOWN')),
    status               VARCHAR(15) CHECK (status IN ('ACTIVE','TERMINATED','PENDING')),
    start_date           DATE,
    termination_date     DATE,
    tax_number           VARCHAR(50),
    updated_date_utc     TIMESTAMPTZ,
    has_validation_errors BOOLEAN,

    /* --- SCD‑2 infrastructure ------------------------------- */
    surrogate_key        BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    valid_from           TIMESTAMPTZ NOT NULL,
    valid_to             TIMESTAMPTZ NOT NULL DEFAULT '9999-12-31 23:59:59.999999+00',
    is_current           BOOLEAN     NOT NULL DEFAULT TRUE,

    /* --- Audit & status ------------------------------------- */
    fetched_at           TIMESTAMPTZ NOT NULL,
    row_created_at       TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    row_updated_at       TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    record_status        ods.record_status_enum NOT NULL DEFAULT 'ACTIVE',

    /* --- Batch / source tracking ---------------------------- */
    batch_id                     UUID         NOT NULL,
    landing_table_name           VARCHAR(255) NOT NULL,
    landing_record_identifier    VARCHAR(512) NOT NULL,
    raw_table_name               VARCHAR(255),
    api_call_id                  UUID,
    source_system_id             VARCHAR(100),
    source_record_modified_at    TIMESTAMPTZ,

    /* --- Constraints ---------------------------------------- */
    CONSTRAINT uq_employees_business_key_current
        UNIQUE (employee_id, is_current)
        WHERE is_current,

    CONSTRAINT ck_employees_record_status
        CHECK (record_status IN ('ACTIVE','SUPERSEDED','ARCHIVED','REMOVED')),

    CONSTRAINT ck_employees_valid_dates
        CHECK (valid_from < valid_to),

    /* --- Foreign Keys --------------------------------------- */
    CONSTRAINT fk_employees_organisation
        FOREIGN KEY (organisation_id)
        REFERENCES ods.organisations(organisation_id)
);

/* --- Indexes -------------------------------------------------- */
CREATE INDEX IF NOT EXISTS idx_employees_business_key_current
    ON ods.employees(employee_id) WHERE is_current;

CREATE INDEX IF NOT EXISTS idx_employees_valid_to
    ON ods.employees(valid_to);

CREATE INDEX IF NOT EXISTS idx_employees_is_current
    ON ods.employees(is_current);

CREATE INDEX IF NOT EXISTS idx_employees_fetched_at
    ON ods.employees(fetched_at);

CREATE INDEX IF NOT EXISTS idx_employees_batch_id
    ON ods.employees(batch_id);

CREATE INDEX IF NOT EXISTS idx_employees_organisation_id
    ON ods.employees(organisation_id);

/* --- Trigger to maintain row_updated_at --------------------- */
CREATE TRIGGER trg_update_employees_row_updated_at
BEFORE UPDATE ON ods.employees
FOR EACH ROW EXECUTE FUNCTION ods.fn_update_row_updated_at();

/* --- Documentation ----------------------------------------- */
COMMENT ON TABLE ods.employees IS 'Employee master records captured with Type‑2 slowly changing dimensions to preserve history.';
COMMENT ON COLUMN ods.employees.employee_id IS 'Natural business key from Xero (EmployeeID).';
COMMENT ON COLUMN ods.employees.is_current IS 'TRUE if this row is the most recent version of the employee record.';
