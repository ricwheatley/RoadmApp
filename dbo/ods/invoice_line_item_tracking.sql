-- =============================================================
--  ODS SCD‑2 DDL SCRIPT – Xero InvoiceLineItemTracking
--  Generated: 28‑May‑2025
--  Notes:
--    * Surrogate key uses IDENTITY (PostgreSQL‑preferred).
--    * Assumes ods.record_status_enum and fn_update_row_updated_at() already exist.
--    * Composite business key: line_item_id + tracking_option_id (one tracking option per line item).
--    * Parent linkage: FK to ods.invoice_line_items(line_item_id), ods.organisations.
-- =============================================================

/* -------------------------------------------------------------
   ods.invoice_line_item_tracking – tracking dimensions attached to each invoice line item (Type‑2 SCD)
   ------------------------------------------------------------- */
CREATE TABLE IF NOT EXISTS ods.invoice_line_item_tracking (
    /* --- Business / natural key ----------------------------- */
    line_item_id         UUID           NOT NULL, -- Parent line item (Xero LineItemID)
    tracking_option_id   UUID           NOT NULL, -- Specific tracking option chosen

    /* --- Additional attributes ----------------------------- */
    tracking_category_id UUID,                     -- Category this option belongs to
    tracking_category_name VARCHAR(100),          -- Category name (redundant snapshot)
    tracking_option_name   VARCHAR(100),          -- Option name (redundant snapshot)

    /* --- Tenant / organisation ----------------------------- */
    organisation_id      UUID           NOT NULL,

    /* --- SCD‑2 infrastructure ------------------------------- */
    surrogate_key        BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    valid_from           TIMESTAMPTZ    NOT NULL,
    valid_to             TIMESTAMPTZ    NOT NULL DEFAULT '9999-12-31 23:59:59.999999+00',
    is_current           BOOLEAN        NOT NULL DEFAULT TRUE,

    /* --- Audit & status ------------------------------------- */
    fetched_at           TIMESTAMPTZ    NOT NULL,
    row_created_at       TIMESTAMPTZ    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    row_updated_at       TIMESTAMPTZ    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    record_status        ods.record_status_enum NOT NULL DEFAULT 'ACTIVE',

    /* --- Batch / source tracking ---------------------------- */
    batch_id                  UUID         NOT NULL,
    landing_table_name        VARCHAR(255) NOT NULL,
    landing_record_identifier VARCHAR(512) NOT NULL,
    raw_table_name            VARCHAR(255),
    api_call_id               UUID,
    source_system_id          VARCHAR(100),
    source_record_modified_at TIMESTAMPTZ,

    /* --- Constraints ---------------------------------------- */
    CONSTRAINT uq_line_item_tracking_business_key_current
        UNIQUE (line_item_id, tracking_option_id, is_current)
        WHERE is_current,

    CONSTRAINT fk_line_item_tracking_line_item
        FOREIGN KEY (line_item_id)
        REFERENCES ods.invoice_line_items(line_item_id),

    CONSTRAINT fk_line_item_tracking_organisation
        FOREIGN KEY (organisation_id)
        REFERENCES ods.organisations(organisation_id),

    CONSTRAINT fk_line_item_tracking_option
        FOREIGN KEY (tracking_option_id)
        REFERENCES ods.tracking_options(tracking_option_id),

    -- Generic SCD & status checks
    CONSTRAINT ck_line_item_tracking_record_status
        CHECK (record_status IN ('ACTIVE','SUPERSEDED','ARCHIVED','REMOVED')),

    CONSTRAINT ck_line_item_tracking_valid_dates
        CHECK (valid_from < valid_to)
);

/* --- Indexes ------------------------------------------------ */
CREATE INDEX IF NOT EXISTS idx_line_item_tracking_business_key_current
    ON ods.invoice_line_item_tracking(line_item_id, tracking_option_id)
    WHERE is_current;

CREATE INDEX IF NOT EXISTS idx_line_item_tracking_line_item
    ON ods.invoice_line_item_tracking(line_item_id);

CREATE INDEX IF NOT EXISTS idx_line_item_tracking_valid_to
    ON ods.invoice_line_item_tracking(valid_to);

CREATE INDEX IF NOT EXISTS idx_line_item_tracking_is_current
    ON ods.invoice_line_item_tracking(is_current);

CREATE INDEX IF NOT EXISTS idx_line_item_tracking_fetched_at
    ON ods.invoice_line_item_tracking(fetched_at);

CREATE INDEX IF NOT EXISTS idx_line_item_tracking_batch_id
    ON ods.invoice_line_item_tracking(batch_id);

CREATE INDEX IF NOT EXISTS idx_line_item_tracking_organisation_id
    ON ods.invoice_line_item_tracking(organisation_id);

/* --- Trigger to maintain row_updated_at -------------------- */
CREATE TRIGGER trg_update_line_item_tracking_row_updated_at
BEFORE UPDATE ON ods.invoice_line_item_tracking
FOR EACH ROW EXECUTE FUNCTION ods.fn_update_row_updated_at();

/* --- Documentation ----------------------------------------- */
COMMENT ON TABLE ods.invoice_line_item_tracking IS 'Tracking category/option selections for each invoice line item stored as Type‑2 slowly‑changing dimensions (one row per version).';
COMMENT ON COLUMN ods.invoice_line_item_tracking.line_item_id IS 'Parent line item – FK to ods.invoice_line_items(line_item_id).';
COMMENT ON COLUMN ods.invoice_line_item_tracking.tracking_option_id IS 'TrackingOptionID selected for the line item.';
COMMENT ON COLUMN ods.invoice_line_item_tracking.tracking_category_id IS 'TrackingCategoryID that owns the option.';
COMMENT ON COLUMN ods.invoice_line_item_tracking.surrogate_key IS 'Surrogate identifier for each version of the tracking record.';
COMMENT ON COLUMN ods.invoice_line_item_tracking.valid_from IS 'Timestamp when this tracking record version becomes valid.';
COMMENT ON COLUMN ods.invoice_line_item_tracking.valid_to IS 'Timestamp when this tracking record version ceases to be valid.';
COMMENT ON COLUMN ods.invoice_line_item_tracking.is_current IS 'TRUE if this row represents the current version.';
