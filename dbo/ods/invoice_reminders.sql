-- =============================================================
--  ODS SCD‑2 DDL SCRIPT – Xero InvoiceReminders
--  Generated: 28‑May‑2025
--  Notes:
--    * Surrogate key uses BIGINT IDENTITY (PostgreSQL‑preferred).
--    * Assumes ods.record_status_enum and fn_update_row_updated_at() already exist.
--    * Business key: reminder_id (UUID).
--    * Based on the Invoice Reminders endpoint: each reminder row includes number of days, schedule type, and email templates.
-- =============================================================

/* -------------------------------------------------------------
   ods.invoice_reminders – Type‑2 Slowly Changing Dimensions table
   ------------------------------------------------------------- */
CREATE TABLE IF NOT EXISTS ods.invoice_reminders (
    /* --- Business / natural key ----------------------------- */
    reminder_id         UUID            NOT NULL,      -- Xero ReminderID

    /* --- Tenant / organisation ------------------------------ */
    organisation_id     UUID            NOT NULL,

    /* --- Core scalar attributes ----------------------------- */
    enabled             BOOLEAN         NOT NULL,
    number_of_days      INTEGER         CHECK (number_of_days >= 0),
    schedule_type       VARCHAR(15)     CHECK (schedule_type IN ('BEFOREDUE','ONDUE','AFTERDUE')),
    email_subject       VARCHAR(255),
    email_body          TEXT,
    updated_date_utc    TIMESTAMPTZ,

    /* --- SCD‑2 infrastructure ------------------------------- */
    surrogate_key       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    valid_from          TIMESTAMPTZ NOT NULL,
    valid_to            TIMESTAMPTZ NOT NULL DEFAULT '9999-12-31 23:59:59.999999+00',
    is_current          BOOLEAN     NOT NULL DEFAULT TRUE,

    /* --- Audit & status ------------------------------------- */
    fetched_at          TIMESTAMPTZ NOT NULL,
    row_created_at      TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    row_updated_at      TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    record_status       ods.record_status_enum NOT NULL DEFAULT 'ACTIVE',

    /* --- Batch / source tracking ---------------------------- */
    batch_id                     UUID         NOT NULL,
    landing_table_name           VARCHAR(255) NOT NULL,
    landing_record_identifier    VARCHAR(512) NOT NULL,
    raw_table_name               VARCHAR(255),
    api_call_id                  UUID,
    source_system_id             VARCHAR(100),
    source_record_modified_at    TIMESTAMPTZ,

    /* --- Constraints ---------------------------------------- */
    CONSTRAINT uq_invoice_reminders_business_key_current
        UNIQUE (reminder_id, is_current)
        WHERE is_current,

    CONSTRAINT ck_invoice_reminders_record_status
        CHECK (record_status IN ('ACTIVE','SUPERSEDED','ARCHIVED','REMOVED')),

    CONSTRAINT ck_invoice_reminders_valid_dates
        CHECK (valid_from < valid_to),

    /* --- Foreign Keys --------------------------------------- */
    CONSTRAINT fk_invoice_reminders_organisation
        FOREIGN KEY (organisation_id)
        REFERENCES ods.organisations(organisation_id)
);

/* --- Indexes -------------------------------------------------- */
CREATE INDEX IF NOT EXISTS idx_invoice_reminders_business_key_current
    ON ods.invoice_reminders(reminder_id) WHERE is_current;

CREATE INDEX IF NOT EXISTS idx_invoice_reminders_valid_to
    ON ods.invoice_reminders(valid_to);

CREATE INDEX IF NOT EXISTS idx_invoice_reminders_is_current
    ON ods.invoice_reminders(is_current);

CREATE INDEX IF NOT EXISTS idx_invoice_reminders_fetched_at
    ON ods.invoice_reminders(fetched_at);

CREATE INDEX IF NOT EXISTS idx_invoice_reminders_batch_id
    ON ods.invoice_reminders(batch_id);

CREATE INDEX IF NOT EXISTS idx_invoice_reminders_organisation_id
    ON ods.invoice_reminders(organisation_id);

/* --- Trigger to maintain row_updated_at --------------------- */
CREATE TRIGGER trg_update_invoice_reminders_row_updated_at
BEFORE UPDATE ON ods.invoice_reminders
FOR EACH ROW EXECUTE FUNCTION fn_update_row_updated_at();

/* --- Documentation ----------------------------------------- */
COMMENT ON TABLE ods.invoice_reminders IS 'Invoice reminder rules (per organisation), captured with Type‑2 slowly changing dimensions to preserve history.';
COMMENT ON COLUMN ods.invoice_reminders.reminder_id IS 'Natural key from Xero (ReminderID).';
COMMENT ON COLUMN ods.invoice_reminders.schedule_type IS 'When to send reminder: BEFOREDUE, ONDUE, AFTERDUE.';
COMMENT ON COLUMN ods.invoice_reminders.number_of_days IS 'Number of days before/after due date when the reminder is triggered.';
