-- =============================================================
--  ODS SCD‑2 DDL SCRIPT – Xero Invoices
--  Generated: 28‑May‑2025
--  Notes:
--    * Surrogate key uses IDENTITY (preferred over SERIAL).
--    * Assumes ods.record_status_enum and fn_update_row_updated_at() already exist.
--    * Business key: invoice_id (UUID).
--    * Line items, contact object, payments, allocations, attachments etc. are not expanded here – ask to generate child tables if needed.
-- =============================================================

/* -------------------------------------------------------------
   ods.invoices – sales invoices & purchase bills (Type‑2 SCD)
   ------------------------------------------------------------- */
CREATE TABLE IF NOT EXISTS ods.invoices (
    /* --- Business / natural key ----------------------------- */
    invoice_id            UUID           NOT NULL, -- Xero InvoiceID

    /* --- Core scalar attributes from Invoice schema --------- */
    invoice_number        VARCHAR(255),           -- ACCREC only
    type                  VARCHAR(20)    NOT NULL, -- ACCPAY, ACCREC, etc.
    status                VARCHAR(20)    NOT NULL, -- DRAFT, AUTHORISED, etc.
    line_amount_types     VARCHAR(10),            -- EXCLUSIVE, INCLUSIVE, NOTAX
    date                  DATE,
    due_date              DATE,
    reference             VARCHAR(255),
    branding_theme_id     UUID,
    url                   VARCHAR(512),
    currency_code         VARCHAR(3),
    currency_rate         NUMERIC(18,6),
    sent_to_contact       BOOLEAN,
    expected_payment_date DATE,
    planned_payment_date  DATE,
    sub_total             NUMERIC(18,2),
    total_tax             NUMERIC(18,2),
    total                 NUMERIC(18,2),
    amount_due            NUMERIC(18,2),
    amount_paid           NUMERIC(18,2),
    fully_paid_on_date    DATE,
    has_attachments       BOOLEAN,
    is_discounted         BOOLEAN,
    has_errors            BOOLEAN,
    status_attribute_string VARCHAR(50),
    repeating_invoice_id  UUID,
    updated_date_utc      TIMESTAMPTZ,

    organisation_id       UUID           NOT NULL,

    /* --- SCD‑2 infrastructure ------------------------------ */
    surrogate_key         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    valid_from            TIMESTAMPTZ    NOT NULL,
    valid_to              TIMESTAMPTZ    NOT NULL DEFAULT '9999-12-31 23:59:59.999999+00',
    is_current            BOOLEAN        NOT NULL DEFAULT TRUE,

    /* --- Audit & status ------------------------------------ */
    fetched_at            TIMESTAMPTZ    NOT NULL,
    row_created_at        TIMESTAMPTZ    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    row_updated_at        TIMESTAMPTZ    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    record_status         ods.record_status_enum NOT NULL DEFAULT 'ACTIVE',

    /* --- Batch / source tracking --------------------------- */
    batch_id                  UUID         NOT NULL,
    landing_table_name        VARCHAR(255) NOT NULL,
    landing_record_identifier VARCHAR(512) NOT NULL,
    raw_table_name            VARCHAR(255),
    api_call_id               UUID,
    source_system_id          VARCHAR(100),
    source_record_modified_at TIMESTAMPTZ,

    /* --- Constraints --------------------------------------- */
    CONSTRAINT uq_invoices_business_key_current
        UNIQUE (invoice_id, is_current)
        WHERE is_current,

    CONSTRAINT fk_invoices_organisation
        FOREIGN KEY (organisation_id)
        REFERENCES ods.organisations(organisation_id),

    -- Enumerated value checks
    CONSTRAINT ck_invoices_type_allowed
        CHECK (type IN ('ACCPAY','ACCPAYCREDIT','APOVERPAYMENT','APPREPAYMENT','ACCREC','ACCRECCREDIT','AROVERPAYMENT','ARPREPAYMENT')),

    CONSTRAINT ck_invoices_status_allowed
        CHECK (status IN ('DRAFT','SUBMITTED','DELETED','AUTHORISED','PAID','VOIDED')),

    CONSTRAINT ck_invoices_line_amount_types_allowed
        CHECK (line_amount_types IN ('EXCLUSIVE','INCLUSIVE','NOTAX') OR line_amount_types IS NULL),

    CONSTRAINT ck_invoices_currency_code
        CHECK (currency_code IS NULL OR currency_code ~ '^[A-Z]{3}$'),

    CONSTRAINT ck_invoices_currency_rate_non_negative
        CHECK (currency_rate IS NULL OR currency_rate >= 0),

    -- Generic SCD & status checks
    CONSTRAINT ck_invoices_record_status
        CHECK (record_status IN ('ACTIVE','SUPERSEDED','ARCHIVED','REMOVED')),

    CONSTRAINT ck_invoices_valid_dates
        CHECK (valid_from < valid_to)
);

/* --- Indexes ------------------------------------------------ */
CREATE INDEX IF NOT EXISTS idx_invoices_business_key_current
    ON ods.invoices(invoice_id)
    WHERE is_current;

CREATE INDEX IF NOT EXISTS idx_invoices_valid_to
    ON ods.invoices(valid_to);

CREATE INDEX IF NOT EXISTS idx_invoices_is_current
    ON ods.invoices(is_current);

CREATE INDEX IF NOT EXISTS idx_invoices_fetched_at
    ON ods.invoices(fetched_at);

CREATE INDEX IF NOT EXISTS idx_invoices_batch_id
    ON ods.invoices(batch_id);

CREATE INDEX IF NOT EXISTS idx_invoices_organisation_id
    ON ods.invoices(organisation_id);

/* --- Trigger to maintain row_updated_at -------------------- */
CREATE TRIGGER trg_update_invoices_row_updated_at
BEFORE UPDATE ON ods.invoices
FOR EACH ROW EXECUTE FUNCTION fn_update_row_updated_at();

/* --- Documentation ---------------------------------------- */
COMMENT ON TABLE ods.invoices IS 'Sales invoices and purchase bills stored as Type‑2 slowly‑changing dimensions (one row per version).';
COMMENT ON COLUMN ods.invoices.invoice_id IS 'Natural business key (Xero InvoiceID).';
COMMENT ON COLUMN ods.invoices.type IS 'Invoice type – ACCPAY, ACCREC, credits, overpayments, etc.';
COMMENT ON COLUMN ods.invoices.status IS 'Invoice workflow status – DRAFT, SUBMITTED, AUTHORISED, etc.';
COMMENT ON COLUMN ods.invoices.line_amount_types IS 'Line amount interpretation – EXCLUSIVE, INCLUSIVE, or NOTAX.';
COMMENT ON COLUMN ods.invoices.surrogate_key IS 'Surrogate key for each version of the invoice record.';
COMMENT ON COLUMN ods.invoices.valid_from IS 'Timestamp when this invoice version becomes valid.';
COMMENT ON COLUMN ods.invoices.valid_to IS 'Timestamp when this invoice version ceases to be valid.';
COMMENT ON COLUMN ods.invoices.is_current IS 'TRUE if this row represents the current version.';
