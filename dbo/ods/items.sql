-- =============================================================
--  ODS SCD‑2 DDL SCRIPT – Xero Items
--  Generated: 28‑May‑2025
--  Notes:
--    * Surrogate key uses BIGINT IDENTITY (PostgreSQL‑preferred).
--    * Assumes ods.record_status_enum and fn_update_row_updated_at() already exist.
--    * Business key: item_id (UUID).
--    * PurchaseDetails / SalesDetails child structures are flattened to scalar columns here; 
--      inventory movement history is not included – ask if you need a separate table.
-- =============================================================

/* -------------------------------------------------------------
   ods.items – Type‑2 Slowly Changing Dimensions table
   ------------------------------------------------------------- */
CREATE TABLE IF NOT EXISTS ods.items (
    /* --- Business / natural key ----------------------------- */
    item_id                       UUID            NOT NULL,   -- Xero ItemID

    /* --- Tenant / organisation ------------------------------ */
    organisation_id               UUID            NOT NULL,

    /* --- Core scalar attributes ----------------------------- */
    code                          VARCHAR(50),
    name                          VARCHAR(255),
    description                   TEXT,

    -- Purchase details (flattened)
    purchase_description          TEXT,
    purchase_unit_price           NUMERIC(18,2)  CHECK (purchase_unit_price >= 0),
    purchase_account_code         VARCHAR(10)     CHECK (purchase_account_code ~ '^[A-Z0-9]{1,10}$'),
    purchase_tax_type             VARCHAR(50),

    -- Sales details (flattened)
    sales_unit_price              NUMERIC(18,2)  CHECK (sales_unit_price >= 0),
    sales_account_code            VARCHAR(10)     CHECK (sales_account_code ~ '^[A-Z0-9]{1,10}$'),
    sales_tax_type                VARCHAR(50),

    inventory_asset_account_code  VARCHAR(10)     CHECK (inventory_asset_account_code ~ '^[A-Z0-9]{1,10}$'),
    is_tracked_as_inventory       BOOLEAN,
    is_sold                       BOOLEAN,
    is_purchased                  BOOLEAN,
    total_cost_pool               NUMERIC(18,2)  CHECK (total_cost_pool >= 0),
    quantity_on_hand              NUMERIC(18,2)  CHECK (quantity_on_hand >= 0),
    has_attachments               BOOLEAN,
    updated_date_utc              TIMESTAMPTZ,

    /* --- SCD‑2 infrastructure ------------------------------- */
    surrogate_key                 BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    valid_from                    TIMESTAMPTZ NOT NULL,
    valid_to                      TIMESTAMPTZ NOT NULL DEFAULT '9999-12-31 23:59:59.999999+00',
    is_current                    BOOLEAN NOT NULL DEFAULT TRUE,

    /* --- Audit & status ------------------------------------- */
    fetched_at                    TIMESTAMPTZ NOT NULL,
    row_created_at                TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    row_updated_at                TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    record_status                 ods.record_status_enum NOT NULL DEFAULT 'ACTIVE',

    /* --- Batch / source tracking ---------------------------- */
    batch_id                      UUID         NOT NULL,
    landing_table_name            VARCHAR(255) NOT NULL,
    landing_record_identifier     VARCHAR(512) NOT NULL,
    raw_table_name                VARCHAR(255),
    api_call_id                   UUID,
    source_system_id              VARCHAR(100),
    source_record_modified_at     TIMESTAMPTZ,

    /* --- Constraints ---------------------------------------- */
    CONSTRAINT uq_items_business_key_current UNIQUE (item_id, is_current) WHERE is_current,

    CONSTRAINT ck_items_record_status CHECK (record_status IN ('ACTIVE','SUPERSEDED','ARCHIVED','REMOVED')),
    CONSTRAINT ck_items_valid_dates CHECK (valid_from < valid_to),

    /* --- Foreign Keys --------------------------------------- */
    CONSTRAINT fk_items_organisation FOREIGN KEY (organisation_id)
        REFERENCES ods.organisations(organisation_id)
);

/* --- Indexes -------------------------------------------------- */
CREATE INDEX IF NOT EXISTS idx_items_business_key_current ON ods.items(item_id) WHERE is_current;
CREATE INDEX IF NOT EXISTS idx_items_valid_to         ON ods.items(valid_to);
CREATE INDEX IF NOT EXISTS idx_items_is_current        ON ods.items(is_current);
CREATE INDEX IF NOT EXISTS idx_items_fetched_at        ON ods.items(fetched_at);
CREATE INDEX IF NOT EXISTS idx_items_batch_id          ON ods.items(batch_id);
CREATE INDEX IF NOT EXISTS idx_items_organisation_id   ON ods.items(organisation_id);

/* --- Trigger to maintain row_updated_at --------------------- */
CREATE TRIGGER trg_update_items_row_updated_at
BEFORE UPDATE ON ods.items
FOR EACH ROW EXECUTE FUNCTION fn_update_row_updated_at();

/* --- Documentation ----------------------------------------- */
COMMENT ON TABLE ods.items IS 'Master item records from Xero (sales & purchase inventory), stored with Type‑2 slowly changing dimensions to preserve history.';
COMMENT ON COLUMN ods.items.item_id IS 'Natural business key (Xero ItemID).';
COMMENT ON COLUMN ods.items.is_tracked_as_inventory IS 'TRUE if inventory tracking is enabled for the item.';
COMMENT ON COLUMN ods.items.quantity_on_hand IS 'Quantity currently on hand according to Xero. (Snapshot at fetch time)';
