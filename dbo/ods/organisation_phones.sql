-- =============================================================
--  ODS SCD‑2 DDL SCRIPT – Xero OrganisationPhones
--  Generated: 28‑May‑2025
--  Notes:
--    * Surrogate key uses IDENTITY.
--    * Assumes ods.record_status_enum and fn_update_row_updated_at() already exist.
--    * Composite natural key: organisation_id + phone_type (one phone of each type per organisation).
-- =============================================================

/* -------------------------------------------------------------
   ods.organisation_phones – phone numbers for organisations
   ----------------------------------------------------------- */
CREATE TABLE IF NOT EXISTS ods.organisation_phones (
    /* --- Business / natural key -------------------------------- */
    organisation_id UUID        NOT NULL,
    phone_type      VARCHAR(20) NOT NULL,

    /* --- Scalar attributes (Phone schema) ---------------------- */
    phone_number        VARCHAR(50),
    phone_area_code     VARCHAR(10),
    phone_country_code  VARCHAR(20),

    /* --- SCD‑2 infrastructure ---------------------------------- */
    surrogate_key BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    valid_from    TIMESTAMPTZ NOT NULL,
    valid_to      TIMESTAMPTZ NOT NULL DEFAULT '9999-12-31 23:59:59.999999+00',
    is_current    BOOLEAN     NOT NULL DEFAULT TRUE,

    /* --- Audit & status ---------------------------------------- */
    fetched_at     TIMESTAMPTZ NOT NULL,
    row_created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    row_updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    record_status  ods.record_status_enum NOT NULL DEFAULT 'ACTIVE',

    /* --- Batch / source tracking ------------------------------- */
    batch_id                  UUID         NOT NULL,
    landing_table_name        VARCHAR(255) NOT NULL,
    landing_record_identifier VARCHAR(512) NOT NULL,
    raw_table_name            VARCHAR(255),
    api_call_id               UUID,
    source_system_id          VARCHAR(100),
    source_record_modified_at TIMESTAMPTZ,

    /* --- Constraints ------------------------------------------- */
    CONSTRAINT uq_org_phones_business_key_current
        UNIQUE (organisation_id, phone_type, is_current) WHERE is_current,

    CONSTRAINT fk_org_phones_organisation
        FOREIGN KEY (organisation_id)
        REFERENCES ods.organisations(organisation_id),

    CONSTRAINT ck_org_phones_record_status
        CHECK (record_status IN ('ACTIVE','SUPERSEDED','ARCHIVED','REMOVED')),

    CONSTRAINT ck_org_phones_valid_dates
        CHECK (valid_from < valid_to),

    CONSTRAINT ck_org_phones_type
        CHECK (phone_type IN ('DEFAULT','DDI','MOBILE','FAX','OFFICE'))
);

/* --- Indexes -------------------------------------------------- */
CREATE INDEX IF NOT EXISTS idx_org_phones_business_key_current
    ON ods.organisation_phones(organisation_id, phone_type) WHERE is_current;

CREATE INDEX IF NOT EXISTS idx_org_phones_valid_to
    ON ods.organisation_phones(valid_to);

CREATE INDEX IF NOT EXISTS idx_org_phones_is_current
    ON ods.organisation_phones(is_current);

CREATE INDEX IF NOT EXISTS idx_org_phones_fetched_at
    ON ods.organisation_phones(fetched_at);

CREATE INDEX IF NOT EXISTS idx_org_phones_batch_id
    ON ods.organisation_phones(batch_id);

/* --- Row‑updated‑at trigger ---------------------------------- */
CREATE TRIGGER trg_update_org_phones_row_updated_at
BEFORE UPDATE ON ods.organisation_phones
FOR EACH ROW EXECUTE FUNCTION ods.fn_update_row_updated_at();

/* --- Documentation ------------------------------------------- */
COMMENT ON TABLE ods.organisation_phones IS 'Phone numbers for Xero organisations, captured as a Type‑2 SCD to retain history.';
COMMENT ON COLUMN ods.organisation_phones.organisation_id IS 'Foreign key to ods.organisations (business key).';
COMMENT ON COLUMN ods.organisation_phones.phone_type IS 'Xero phone type (DEFAULT, DDI, MOBILE, FAX, OFFICE).';
COMMENT ON COLUMN ods.organisation_phones.surrogate_key IS 'Surrogate key for each version of the organisation phone record.';
COMMENT ON COLUMN ods.organisation_phones.valid_from IS 'Timestamp at which this version becomes valid.';
COMMENT ON COLUMN ods.organisation_phones.valid_to IS 'Timestamp at which this version ceases to be valid.';
COMMENT ON COLUMN ods.organisation_phones.is_current IS 'TRUE if this row is the current version.';
