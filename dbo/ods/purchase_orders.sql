-- =============================================================
--  ODS SCD‑2 DDL SCRIPT – Xero PurchaseOrders
--  Generated: 28‑May‑2025
--  Notes:
--    * Surrogate key uses BIGINT IDENTITY (PostgreSQL‑preferred).
--    * Assumes ods.record_status_enum and fn_update_row_updated_at() already exist.
--    * Business key: purchase_order_id (UUID).
--    * LineItems, Contact object, Attachments, and Tracking arrays are NOT expanded here – request separate tables if needed.
-- =============================================================

/* -----------------------------------------------------------------
   ods.purchase_orders – Type‑2 Slowly Changing Dimensions
   ----------------------------------------------------------------- */
CREATE TABLE IF NOT EXISTS ods.purchase_orders (
    /* --- Business / natural key ---------------------------------- */
    purchase_order_id           UUID            NOT NULL,   -- Xero PurchaseOrderID

    /* --- Tenant / organisation ----------------------------------- */
    organisation_id             UUID            NOT NULL,

    /* --- Core scalar attributes ---------------------------------- */
    purchase_order_number       VARCHAR(50),
    date                        DATE,
    delivery_date               DATE,
    status                      VARCHAR(15)     NOT NULL
        CHECK (status IN ('DRAFT','SUBMITTED','AUTHORised','BILLED','DELETED')),
    line_amount_types           VARCHAR(10)
        CHECK (line_amount_types IN ('EXCLUSIVE','INCLUSIVE','NOTAX')),
    reference                   VARCHAR(255),
    branding_theme_id           UUID,
    contact_id                  UUID,
    currency_code               VARCHAR(3)
        CHECK (currency_code ~ '^[A-Z]{3}$'),
    currency_rate               NUMERIC(18,6) CHECK (currency_rate > 0),

    delivery_address            VARCHAR(255),
    attention_to                VARCHAR(255),
    delivery_instructions       VARCHAR(4000),

    sub_total                   NUMERIC(18,2)   CHECK (sub_total >= 0),
    total_tax                   NUMERIC(18,2)   CHECK (total_tax >= 0),
    total                       NUMERIC(18,2)   CHECK (total >= 0),

    has_attachments             BOOLEAN,
    updated_date_utc            TIMESTAMPTZ,

    /* --- SCD‑2 infrastructure ------------------------------------ */
    surrogate_key               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    valid_from                  TIMESTAMPTZ NOT NULL,
    valid_to                    TIMESTAMPTZ NOT NULL DEFAULT '9999-12-31 23:59:59.999999+00',
    is_current                  BOOLEAN NOT NULL DEFAULT TRUE,

    /* --- Audit & status ------------------------------------------ */
    fetched_at                  TIMESTAMPTZ NOT NULL,
    row_created_at              TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    row_updated_at              TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    record_status               ods.record_status_enum NOT NULL DEFAULT 'ACTIVE',

    /* --- Batch / source tracking --------------------------------- */
    batch_id                    UUID         NOT NULL,
    landing_table_name          VARCHAR(255) NOT NULL,
    landing_record_identifier   VARCHAR(512) NOT NULL,
    raw_table_name              VARCHAR(255),
    api_call_id                 UUID,
    source_system_id            VARCHAR(100),
    source_record_modified_at   TIMESTAMPTZ,

    /* --- Constraints --------------------------------------------- */
    CONSTRAINT uq_purchase_orders_business_key_current UNIQUE (purchase_order_id, is_current) WHERE is_current,

    CONSTRAINT ck_po_record_status  CHECK (record_status IN ('ACTIVE','SUPERSEDED','ARCHIVED','REMOVED')),
    CONSTRAINT ck_po_valid_dates    CHECK (valid_from < valid_to),

    /* --- Foreign Keys -------------------------------------------- */
    CONSTRAINT fk_po_org FOREIGN KEY (organisation_id)
        REFERENCES ods.organisations(organisation_id)
);

/* --- Indexes ---------------------------------------------------- */
CREATE INDEX IF NOT EXISTS idx_po_business_key_current ON ods.purchase_orders(purchase_order_id) WHERE is_current;
CREATE INDEX IF NOT EXISTS idx_po_valid_to             ON ods.purchase_orders(valid_to);
CREATE INDEX IF NOT EXISTS idx_po_is_current           ON ods.purchase_orders(is_current);
CREATE INDEX IF NOT EXISTS idx_po_fetched_at           ON ods.purchase_orders(fetched_at);
CREATE INDEX IF NOT EXISTS idx_po_batch_id             ON ods.purchase_orders(batch_id);
CREATE INDEX IF NOT EXISTS idx_po_org_id               ON ods.purchase_orders(organisation_id);
CREATE INDEX IF NOT EXISTS idx_po_status               ON ods.purchase_orders(status);

/* --- Trigger to maintain row_updated_at ------------------------- */
CREATE TRIGGER trg_update_po_row_updated_at
BEFORE UPDATE ON ods.purchase_orders
FOR EACH ROW EXECUTE FUNCTION fn_update_row_updated_at();

/* --- Documentation --------------------------------------------- */
COMMENT ON TABLE ods.purchase_orders IS 'Stores Xero Purchase Orders with Type‑2 SCD history (one version per change).';
COMMENT ON COLUMN ods.purchase_orders.purchase_order_id IS 'Natural business key (Xero PurchaseOrderID).';
COMMENT ON COLUMN ods.purchase_orders.status IS 'Workflow status: DRAFT, SUBMITTED, AUTHORISED, BILLED, or DELETED.';
