-- =============================================================
--  ODS SCD‑2 DDL SCRIPT – Xero TaxRates
--  Generated: 28‑May‑2025
--  Notes:
--    * Surrogate key uses IDENTITY (preferred).
--    * Assumes ods.record_status_enum and fn_update_row_updated_at() already exist.
--    * Business key: organisation_id + tax_type (unique per org).
--    * Nested array TaxComponents not expanded here – request if a separate SCD‑2 table is required.
-- =============================================================

/* -------------------------------------------------------------
   ods.tax_rates – tax codes configured for each organisation
   ------------------------------------------------------------- */
CREATE TABLE IF NOT EXISTS ods.tax_rates (
    /* --- Business / natural keys ----------------------------- */
    organisation_id UUID         NOT NULL,   -- Tenant / organisation
    tax_type        VARCHAR(50)  NOT NULL,   -- Xero TaxType code (e.g. INPUT2, OUTPUT2)

    /* --- Core scalar attributes from TaxRate schema ---------- */
    name            VARCHAR(255),            -- Human‑readable tax rate name fileciteturn23file5
    report_tax_type VARCHAR(50),            -- ReportTaxType (large enum) fileciteturn24file1
    status          VARCHAR(10),             -- ACTIVE | DELETED | ARCHIVED | PENDING fileciteturn24file5

    can_apply_to_assets      BOOLEAN,
    can_apply_to_equity      BOOLEAN,
    can_apply_to_expenses    BOOLEAN,
    can_apply_to_liabilities BOOLEAN,
    can_apply_to_revenue     BOOLEAN,

    display_tax_rate  NUMERIC(10,4),          -- Display rate (4dp) fileciteturn23file1
    effective_rate    NUMERIC(10,4),          -- Effective rate (4dp) fileciteturn23file1

    /* --- SCD‑2 infrastructure -------------------------------- */
    surrogate_key BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    valid_from    TIMESTAMPTZ NOT NULL,
    valid_to      TIMESTAMPTZ NOT NULL DEFAULT '9999-12-31 23:59:59.999999+00',
    is_current    BOOLEAN     NOT NULL DEFAULT TRUE,

    /* --- Audit & status -------------------------------------- */
    fetched_at     TIMESTAMPTZ NOT NULL,
    row_created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    row_updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    record_status  ods.record_status_enum NOT NULL DEFAULT 'ACTIVE',

    /* --- Batch / source tracking ----------------------------- */
    batch_id                  UUID         NOT NULL,
    landing_table_name        VARCHAR(255) NOT NULL,
    landing_record_identifier VARCHAR(512) NOT NULL,
    raw_table_name            VARCHAR(255),
    api_call_id               UUID,
    source_system_id          VARCHAR(100),
    source_record_modified_at TIMESTAMPTZ,

    /* --- Constraints ----------------------------------------- */
    CONSTRAINT uq_tax_rates_business_key_current
        UNIQUE (organisation_id, tax_type, is_current)
        WHERE is_current,

    CONSTRAINT fk_tax_rates_organisation
        FOREIGN KEY (organisation_id)
        REFERENCES ods.organisations(organisation_id),

    /* enumerations / format checks ---------------------------- */
    CONSTRAINT ck_tax_rates_status
        CHECK (status IN ('ACTIVE','ARCHIVED','DELETED','PENDING')),
    CONSTRAINT ck_tax_rates_tax_type_format
        CHECK (tax_type ~ '^[A-Z0-9]+$'),

    /* generic checks ------------------------------------------ */
    CONSTRAINT ck_tax_rates_record_status
        CHECK (record_status IN ('ACTIVE','SUPERSEDED','ARCHIVED','REMOVED')),

    CONSTRAINT ck_tax_rates_valid_dates
        CHECK (valid_from < valid_to)
);

/* --- Indexes -------------------------------------------------- */
CREATE INDEX IF NOT EXISTS idx_tax_rates_business_key_current
    ON ods.tax_rates(organisation_id, tax_type) WHERE is_current;

CREATE INDEX IF NOT EXISTS idx_tax_rates_valid_to
    ON ods.tax_rates(valid_to);

CREATE INDEX IF NOT EXISTS idx_tax_rates_is_current
    ON ods.tax_rates(is_current);

CREATE INDEX IF NOT EXISTS idx_tax_rates_fetched_at
    ON ods.tax_rates(fetched_at);

CREATE INDEX IF NOT EXISTS idx_tax_rates_batch_id
    ON ods.tax_rates(batch_id);

CREATE INDEX IF NOT EXISTS idx_tax_rates_org_id
    ON ods.tax_rates(organisation_id);

/* --- Trigger to maintain row_updated_at ----------------------- */
CREATE TRIGGER trg_update_tax_rates_row_updated_at
BEFORE UPDATE ON ods.tax_rates
FOR EACH ROW EXECUTE FUNCTION fn_update_row_updated_at();

/* --- Documentation ------------------------------------------- */
COMMENT ON TABLE ods.tax_rates IS 'Tax rates per Xero organisation, stored as a Type‑2 Slowly Changing Dimension.';
COMMENT ON COLUMN ods.tax_rates.organisation_id IS 'Tenant foreign‑key – identifies the organisation to which the tax rate belongs.';
COMMENT ON COLUMN ods.tax_rates.tax_type IS 'Xero TaxType code (business key).';
COMMENT ON COLUMN ods.tax_rates.surrogate_key IS 'Surrogate key for each version of the tax rate record.';
COMMENT ON COLUMN ods.tax_rates.valid_from IS 'Timestamp at which this version becomes valid.';
COMMENT ON COLUMN ods.tax_rates.valid_to IS 'Timestamp at which this version ceases to be valid.';
COMMENT ON COLUMN ods.tax_rates.is_current IS 'TRUE if this row is the current version.';
